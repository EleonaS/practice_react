{"version":3,"sources":["helpers/filterArr.js","components/FilmsListItem/FilmsListItem.styled.js","components/Overlay/Overlay.styled.js","components/FilmsListItem/FilmsListItem.js","components/FilmsList/FilmsList.styled.js","components/FilmsList/FilmsList.js","components/Container/Container.styled.js","components/Container/Container.js","components/Overlay/Overlay.js","App.js","reportWebVitals.js","index.js"],"names":["filterMovies","movies","map","id","title","img","backdrop_path","text","overview","isWatched","Title","styled","h2","ListItem","li","StyledOverlay","div","Text","p","Label","span","FilmsListItem","onClick","onStatusClick","src","alt","type","StyledList","ul","FilmsList","StyledContainer","Container","children","Overlay","App","state","handleItemClick","setState","handleCloseOverlay","handleChangeStatus","newMovies","movie","push","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94c2c99e.chunk.js","sourcesContent":["const filterMovies = movies =>\r\n  movies.map(({ id, title, backdrop_path: img, overview: text }) =>\r\n({\r\n  id,\r\n  title,\r\n  img,\r\n  text,\r\n  isWatched: false,\r\n}));\r\n    \r\nexport default filterMovies;","import styled from 'styled-components';\r\n\r\nconst Title = styled.h2`\r\ncolor: tomato;`;\r\n\r\nconst ListItem = styled.li`\r\ncursor:pointer;\r\n  &:hover  ${Title} {\r\n  color: blue;\r\n  font-size:28px;\r\n}\r\n`;\r\n\r\nexport { Title, ListItem };","import styled from 'styled-components';\r\n\r\nconst StyledOverlay = styled.div`\r\nposition:fixed;\r\ntop: 0;\r\nleft:0;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\nalign-items: center;\r\n\r\nwidth:100%;\r\nheight: 100vh;\r\nbackground-color: gray;\r\n`;\r\n\r\n\r\nconst Text = styled.p`\r\nwidth: 700px;\r\npadding:30px;\r\nbackground-color: #fff;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  display: block;\r\n  margin-top: 10px;\r\n  padding: 5px;\r\n  background-color: #fff;\r\n  color: tomato;\r\n  text-align: center;\r\n  border: 3px solid black;\r\n  cursor: pointer;\r\n`\r\n\r\nexport {StyledOverlay,Text, Label};","import PropTypes from 'prop-types';\r\nimport { Title } from './FilmsListItem.styled';\r\nimport {Label } from '../Overlay/Overlay.styled'\r\nconst FilmsListItem = ({  title, img, id, isWatched,onClick, text, onStatusClick }) =>\r\n  (<>\r\n    <img src={`https://image.tmdb.org/t/p/w400/${img}`} alt={title} />\r\n  <Title>{title}</Title>\r\n  <button type=\"button\" onClick={() => onClick(text) }>Read overview</button>\r\n  <p onClick={()=>onStatusClick(id)}>Is movie watched:<Label>{`${isWatched}`}</Label></p>\r\n</>);\r\n\r\nFilmsListItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  img: PropTypes.string.isRequired,\r\n  id:PropTypes.number.isRequired,\r\n  isWatched: PropTypes.bool.isRequired,\r\n  onStatusClick: PropTypes.func.isRequired,\r\n  \r\n}\r\n\r\nexport default FilmsListItem;","import styled from 'styled-components';\r\n\r\nconst StyledList = styled.ul`\r\nlist-style:none;\r\ndisplay: grid;\r\ngrid-template-columns:repeat(3,1fr);\r\ngap: 30px;\r\npadding-left: 0;\r\n\r\n\r\n`;\r\n\r\nexport { StyledList };","import PropTypes from 'prop-types';\r\nimport FilmsListItem from '../FilmsListItem/FilmsListItem';\r\nimport { StyledList } from './FilmsList.styled';\r\nimport { ListItem } from '../FilmsListItem/FilmsListItem.styled';\r\n\r\nconst FilmsList = ({ movies, onClick, onStatusClick  }) => (\r\n    <StyledList>\r\n        {movies.map(({ id, title, img, text,isWatched }) => (\r\n          <ListItem key={id} >\r\n                <FilmsListItem\r\n                    id={id}\r\n                    title={title}\r\n              img={img}\r\n              isWatched={isWatched}\r\n              text={text}\r\n              onClick={onClick}\r\n              onStatusClick={onStatusClick}\r\n                    \r\n                />\r\n            </ListItem>\r\n        ))}\r\n    </StyledList>\r\n);\r\n\r\nFilmsList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n\r\n    }).isRequired).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  onStatusClick: PropTypes.func.isRequired,\r\n};\r\nexport default FilmsList;","import styled from 'styled-components';\r\nconst StyledContainer = styled.div`\r\nwidth:1240px;\r\nmargin-left:auto;\r\nmargin-right: auto;`\r\n\r\nexport { StyledContainer };","import PropTypes from 'prop-types';\r\nimport { StyledContainer } from './Container.styled'\r\n\r\nconst Container = ({ children }) => <StyledContainer>{children}</StyledContainer>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\nexport default Container;","import PropTypes from 'prop-types';\r\nimport { StyledOverlay, Text } from './Overlay.styled'\r\nconst Overlay = ({ text, onClick}) => <StyledOverlay onClick={onClick}>\r\n  <Text>{text}</Text>\r\n  \r\n</StyledOverlay>;\r\n\r\nOverlay.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  \r\n}\r\nexport default Overlay;\r\n","import { Component } from 'react';\nimport movies from './data/films.json';\nimport filterMovies from './helpers/filterArr';\nimport FilmsList from './components/FilmsList/FilmsList';\nimport Container from './components/Container/Container';\nimport Overlay from './components/Overlay/Overlay';\n\nclass App extends Component {\n  state = {\n    movies: [...filterMovies(movies)],\n    text: '',\n    \n\n  };\n\n  handleItemClick = text => this.setState({ text });\n  handleCloseOverlay = () => this.setState({ text: '' });\n  handleChangeStatus = id => {\n    const { movies } = this.state;\n    const newMovies = [];\n\n    for (const movie of movies) {\n      if (movie.id === id) {\n        movie.isWatched = !movie.isWatched;\n        newMovies.push(movie);\n      }\n    else\n      {\n        newMovies.push(movie);\n      }\n    };\n    this.setState({ movies: newMovies });\n  };\n \n  \n\n  render() {\n    const { movies, text } = this.state;\n\n    return (\n      <>\n        <Container>\n          <FilmsList\n            movies={movies}\n            onClick={this.handleItemClick}\n            onStatusClick={this.handleChangeStatus}\n          />\n        </Container>\n        {text && <Overlay text={text} onClick={this.handleCloseOverlay} />}\n      </>);\n\n  }\n\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}